% Towers of Hanoi
% hanoi(N, Source, Destination, Auxiliary, Moves)
% N is the number of disks
% Source is the starting peg
% Destination is the target peg
% Auxiliary is the auxiliary peg
% Moves is a list of moves in the format move(From, To)

% Base case: Moving one disk is a simple move from Source to Destination
hanoi(1, Source, Destination, _, [move(Source, Destination)]).

% Recursive case: Move N disks from Source to Destination using Auxiliary
hanoi(N, Source, Destination, Auxiliary, Moves) :-
    N > 1,
    N1 is N - 1,
    % Move N-1 disks from Source to Auxiliary using Destination as temporary storage
    hanoi(N1, Source, Auxiliary, Destination, Moves1),
    % Move the Nth disk from Source to Destination
    Moves2 = [move(Source, Destination)],
    % Move the N-1 disks from Auxiliary to Destination using Source as temporary storage
    hanoi(N1, Auxiliary, Destination, Source, Moves3),
    % Concatenate all the moves
    append(Moves1, Moves2, TempMoves),
    append(TempMoves, Moves3, Moves).

% Example query:
% hanoi(3, left, right, center, Moves).
